// Code generated by protoc-gen-ginx. DO NOT EDIT.
// versions:
// - protoc-gen-ginx v0.0.1
// - protoc                v4.24.0
// source: cmd/example/invoice.proto

package invoice

import (
	context "context"
	errors "errors"
	gin "github.com/gin-gonic/gin"
	ginx "github.com/uc1024/f90/ginx"
	http "net/http"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = errors.New
var _ = context.TODO
var _ = gin.New

// InvoiceHTTPServer
type InvoiceHTTPServer interface {
	// TestPath
	TestPath(context.Context, *TestPathRequest) (*TestPathResponse, error)
}

func RegisterInvoiceHTTPServer(g *gin.RouterGroup, srv InvoiceHTTPServer) {
	r := g.Group("")
	{
		r.PATCH("/v1/invoice/:id", _Invoice_TestPath0_HTTP_Handler(srv))
	}
}

func _Invoice_TestPath0_HTTP_Handler(srv InvoiceHTTPServer) gin.HandlerFunc {
	return func(c *gin.Context) {
		var err error
		var req TestPathRequest
		var resp *TestPathResponse

		shouldBind := func(req *TestPathRequest) error {
			if err := ginx.Bind(c, req); err != nil {
				return err
			}
			if err := ginx.BindUri(c, req); err != nil {
				return err
			}
			return ginx.Validate().StructCtx(c.Request.Context(), req)
		}

		if err = shouldBind(&req); err != nil {
			c.Error(err)
			c.Abort()
		}
		resp, err = srv.TestPath(c.Request.Context(), &req)
		if err != nil {
			c.Error(err)
			c.Abort()
		}
		c.JSON(http.StatusOK, resp)
	}
}
